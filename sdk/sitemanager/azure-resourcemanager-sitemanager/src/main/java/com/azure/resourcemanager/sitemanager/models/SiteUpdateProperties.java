// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.sitemanager.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The updatable properties of the Site.
 */
@Fluent
public final class SiteUpdateProperties implements JsonSerializable<SiteUpdateProperties> {
    /*
     * displayName of Site resource
     */
    private String displayName;

    /*
     * Description of Site resource
     */
    private String description;

    /*
     * AddressResource ArmId of Site resource
     */
    private String addressResourceId;

    /**
     * Creates an instance of SiteUpdateProperties class.
     */
    public SiteUpdateProperties() {
    }

    /**
     * Get the displayName property: displayName of Site resource.
     * 
     * @return the displayName value.
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName property: displayName of Site resource.
     * 
     * @param displayName the displayName value to set.
     * @return the SiteUpdateProperties object itself.
     */
    public SiteUpdateProperties withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the description property: Description of Site resource.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: Description of Site resource.
     * 
     * @param description the description value to set.
     * @return the SiteUpdateProperties object itself.
     */
    public SiteUpdateProperties withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the addressResourceId property: AddressResource ArmId of Site resource.
     * 
     * @return the addressResourceId value.
     */
    public String addressResourceId() {
        return this.addressResourceId;
    }

    /**
     * Set the addressResourceId property: AddressResource ArmId of Site resource.
     * 
     * @param addressResourceId the addressResourceId value to set.
     * @return the SiteUpdateProperties object itself.
     */
    public SiteUpdateProperties withAddressResourceId(String addressResourceId) {
        this.addressResourceId = addressResourceId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("displayName", this.displayName);
        jsonWriter.writeStringField("description", this.description);
        jsonWriter.writeStringField("addressResourceId", this.addressResourceId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SiteUpdateProperties from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SiteUpdateProperties if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the SiteUpdateProperties.
     */
    public static SiteUpdateProperties fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SiteUpdateProperties deserializedSiteUpdateProperties = new SiteUpdateProperties();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("displayName".equals(fieldName)) {
                    deserializedSiteUpdateProperties.displayName = reader.getString();
                } else if ("description".equals(fieldName)) {
                    deserializedSiteUpdateProperties.description = reader.getString();
                } else if ("addressResourceId".equals(fieldName)) {
                    deserializedSiteUpdateProperties.addressResourceId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedSiteUpdateProperties;
        });
    }
}
